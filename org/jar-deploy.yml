---
- hosts: "{{ deployIp }}"
  remote_user: root
  tasks:
    - file: "path=/app/jar/{{ artifactId }} state=directory"
      delegate_to: localhost
    - name: copy to dest
      copy:
        src: "/app/jar/{{ artifactId }}/"
        dest: "/app/jar/{{ artifactId }}/"
    - name: delete local package
      file: "path=/var/app/{{ artifactId }} state=absent force=yes"
      delegate_to: localhost
      # 获取上次jar包运行的app
    - name: get pid of api
      tags:
        - getPid
      shell: "ps -ef | grep -v grep | grep  {{ artifactId }} | awk '{print $2}'"
      register: running_processes

    # 发送停止运行信号
    - name: Kill running processes
      shell: "kill {{ item }}"
      tags:
        - killService
      with_items: "{{ running_processes.stdout_lines }}"

    # 等待60s钟，确认获取的到的pid是否都停止运行
    - wait_for:
        path: "/proc/{{ item }}/status"
        state: absent
        timeout: 60
      tags:
        - waitKillService
      with_items: "{{ running_processes.stdout_lines }}"
      ignore_errors: yes
      register: killed_processes
    # 强制杀死，未停止运行的进程
    - name: Force kill stuck processes
      shell: "kill -9 {{ item }}"
      with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"

    # 启动新的jar包
    - name: start jar
      shell: "nohup java -jar -Xms265M -Xmx512M -Dfile.encoding=utf-8 -Dsun.jnu.encoding=UTF-8 -Duser.timezone=Asia/ShangHai /app/jar/{{ artifactId }}/{{ artifactId }}-{{ appVersion }}.jar > /app/jar/logs/{{ artifactId }}-{{ appVersion }}-app.log 2>&1 &"
